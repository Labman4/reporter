name: Native image
on:
  workflow_call:
    inputs:
      env:
        required: false
        type: string
      module:
        required: true
        type: string
      moduleName:
        required: false
        type: string
      version:
        required: true
        type: string
#     secrets:
#       VAULT_TOKEN: 
#         description: 'vault.token'
#         required: true
#       VAULT_URI:
#         description: 'vault.uri'
#         required: true
#       VAULT_PATH:
#         description: 'vault.path'
#         required: true
#       SECRETS_PATH:
#         description: 'SECRETS_PATH'
#         required: true 
jobs:
  test:
    environment: native-image
    runs-on: [ubuntu-latest]
    steps:
      - if: inputs.moduleName == 0
        run: echo "modulePath=${{ inputs.module }}" >> $GITHUB_ENV
      
      - if: inputs.moduleName != 0
        run: echo "modulePath=${{ inputs.module }}/${{ inputs.moduleName }}"  >> $GITHUB_ENV
        
      - uses: ScribeMD/docker-cache@0.2.7
        with:
          key: docker-${{ runner.os }}-${{ github.workflow_ref }}
          
      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
            
      - uses: graalvm/setup-graalvm@d01f5f519f35cf82b318133761fd8b674632a8fe
        with:
          version: 'latest'
          java-version: '17'
          set-java-home: 'true'
          cache: maven
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          native-image-pr-reports: 'true'
        
      - run: |
          echo "path=$(pwd)" >> $GITHUB_ENV
          echo "home=$HOME" >> $GITHUB_ENV
          java --version
          
      - uses: actions/cache@v3.2.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('${{ env.modulePath }}/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('${{ env.modulePath }}/pom.xml') }}      
                 
      - run: | 
          mvn package install -DskipTests

      - run: |
          mvn -DvaultToken=${{secrets.VAULT_TOKEN}} -DvaultPath=${{secrets.VAULT_PATH}} -DvaultUri=${{secrets.VAULT_URI}}  -DSECRETS_PATH=${{secrets.SECRETS_PATH}} -P native,nativeTest -Dagent=true test -f  ${{ env.path }}/${{ env.modulePath}}/pom.xml                
       
      - run: |
          native-image --macro:native-image-configure-launcher
      
      - run: |
          native-image-configure generate --input-dir=${{ env.path }}/${{ env.modulePath}}/target/native/agent-output/test --output-dir=${{ env.path }}/${{ env.modulePath}}/src/main/resources/META-INF/native-image
          #--input-dir=target/native/agent-output/main 
      
      - run: |
          git status
      
      - uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
       
      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: '7.17.3'
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
          
      - run: |
          nohup java -agentlib:native-image-agent=config-merge-dir=${{ env.path }}/${{ env.modulePath }}/src/main/resources/META-INF/native-image/ -DENV=pre -jar ${{ env.modulePath }}/target/${{ inputs.module }}-${{ inputs.version }}.jar > /dev/null 2>&1  & echo "pid=$!" >> $GITHUB_ENV  
          #java -agentlib:native-image-agent=config-merge-dir=${{ env.path }}//${{ env.modulePath }}/src/main/resources/META-INF/native-image/ -DENV=pre -jar  ${{ env.modulePath }}/target/${{ inputs.module }}-${{ inputs.version }}.jar
          #echo "stopMarker=$(uuidgen)" >> $GITHUB_ENV
        #continue-on-error: true 
  
      - run: |
          git status
          
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: test
          path: '**/target/surefire-reports/TEST-*.xml'
  
      - run: |
          #echo "::stop-commands::${{ env.stopMarker }}"
          sleep 15
          kill -s 15 ${{ env.pid }}
          sleep 15
          #curl -X POST http://localhost:8080/actuator/shutdown
        continue-on-error: true 

      - run: | 
         ps -ef |grep ${{ env.pid }}
        
      - run: |
          git status
          
      - id: cpr
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
        with:
          base: native-image
      
      - run: |
          mvn -P native package -DskipTests -f  ${{ env.path }}/${{ env.modulePath }}/pom.xml 
        
      - run: |
          git status
          
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: package
          path: |
            ${{ env.path }}/${{ env.modulePath}}
            !${{ env.path }}/**/*.jar
          retention-days: 3  
   
      - run: | 
         ps -ef |grep ${{ env.pid }}
         #cat ${{ env.path }}//${{ env.modulePath}}/src/main/resources/META-INF/native-image/.lock
      
#       - run: |
#           echo ${{ github.context.payload.pull_request }}
#           echo ${{ steps.cpr.outputs.pull-request-number }}
          
#   pr_number:
#     needs: test
#     environment: ${{ github.event.inputs.environment || 'native-image' }}
#     runs-on: ubuntu-latest
#     if: ${{ github.event_name == 'push' }}
#     steps:
#       - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
#         with:
#           fetch-depth: 0
#       - name: Get Pull Request Number
#         id: pr
#         run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - run: echo ${{ steps.pr.outputs.pull_request_number }}

#   labeler:
#     needs: test
#     uses: Labman4/workflow/.github/workflows/labeler.yml@labeler
#     with: 
#       configuration-path: .github/labeler.yml@labeler
#     secrets: inherit

    
#   automerge:
#     needs: labeler
#     uses: Labman4/workflow/.github/workflows/automerge.yml@automerge
#     secrets: inherit

  deploy:
    needs: buildpacks
    uses: Labman4/workflow/.github/workflows/host-deploy-helm.yml@native-image
    with:
      module: ${{ inputs.module}}
      env: pre

  pre-build:
    uses: Labman4/workflow/.github/workflows/buildpacks-native-pre.yml@buildpacks
    secrets: inherit
    with: 
      module: ${{ inputs.module }}
  
  pre-deploy:
    needs: pre-build
    uses: Labman4/workflow/.github/workflows/host-deploy-helm.yml@native-image
    with:
      module: ${{ inputs.module }}
      env: dev  
    
  buildpacks:
    needs: test
    uses: Labman4/workflow/.github/workflows/buildpacks-native.yml@buildpacks
    secrets: inherit
    with:
      module: ${{ inputs.module }}
 
#   coverage:  
#     needs: test
#     uses: Labman4/workflow/.github/workflows/coverage-reporter.yml@coverage
    
  
