name: Native image
on:
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      moduleName:
        required: false
        type: string
      version:
        required: true
        type: string
      secretPath:
        required: true
        type: string
      native:
        required: false
        type: boolean
jobs:
  cache: 
    uses: Labman4/workflow/.github/workflows/maven.yml@cache
    
  test:
    needs: cache
    environment: native-image
    runs-on: [ubuntu-latest]
    steps:
      - if: inputs.moduleName == 0
        run: echo "modulePath=${{ inputs.module }}" >> $GITHUB_ENV
      
      - if: inputs.moduleName != 0
        run: echo "modulePath=${{ inputs.module }}/${{ inputs.moduleName }}"  >> $GITHUB_ENV
        
      - uses: ScribeMD/docker-cache@0.3.3
        with:
          key: docker-${{ runner.os }}-${{ github.workflow_ref }}
          
      - uses: actions/checkout@v3.5.3
      
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          set-java-home: 'true'
          cache: maven
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          native-image-pr-reports: 'true'
          
      - if: ${{inputs.native  && github.ref_name == 'main' }}
        name: Import Secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.elpsykongroo.com:443
          method: github
          githubToken: ${{ secrets.VAULT_GITHUB_TOKEN }}
          secrets: |
            kv/data/app/test/vault VAULT_TOKEN | VAULT_TOKEN;
            kv/data/app/test/vault VAULT_URI | VAULT_URI;
            kv/data/app/test/vault SECRETS_APP_BASE_PATH | SECRETS_APP_BASE_PATH;            

      - if: ${{inputs.native  && github.ref_name == 'develop' }}
        name: Import Secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.elpsykongroo.com:443
          method: github
          githubToken: ${{ secrets.VAULT_GITHUB_TOKEN }}
          secrets: |
            kv/data/app/test/vault VAULT_TOKEN | VAULT_TOKEN;
            kv/data/app/test/vault VAULT_URI | VAULT_URI;
            kv/data/app/test/vault SECRETS_APP_NATIVE_BASE_PATH | SECRETS_APP_BASE_PATH;
            
      - run: |
          echo "path=$(pwd)" >> $GITHUB_ENV
          echo "SECRETS_APP_PATH=${{ inputs.secretPath }}"  >> $GITHUB_ENV
          java --version
                 
      - run: | 
          mvn clean package install -DskipTests
          
      - run: |
          mvn spring-boot:build-image  -DskipTests -f  ${{ env.path }}/${{ env.modulePath}}/pom.xml         
        
      - run: |
          docker tag ${{inputs.module}}:${{inputs.version}} ${{inputs.module}}:${{ github.event.inputs.ref || github.head_ref || github.ref_name }}
        continue-on-error: true 
        
      - run: |
          docker tag ${{inputs.module}}:${{inputs.version}} ${{inputs.module}}:${{github.sha}}
          
      - name: Push To quay
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{ github.ref_name	}}
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }} 
        continue-on-error: true 
      
      - name: Push To quay ref
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{github.sha}}
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }} 

      - if:  ${{ github.ref_name == 'main' }}
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{inputs.version }}
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }} 

      - run: |
          mvn -P native,nativeTest -Dagent=true test -f  ${{ env.path }}/${{ env.modulePath}}/pom.xml     
          
      - if: inputs.native
        run: |
          native-image --macro:native-image-configure-launcher

      - if: inputs.native
        run: |
          native-image-configure generate --input-dir=${{ env.path }}/${{ env.modulePath}}/target/native/agent-output/test --output-dir=${{ env.path }}/${{ env.modulePath}}/src/main/resources/META-INF/native-image
          #--input-dir=target/native/agent-output/main 
      
      - run: |
          git status
      
      - uses: peter-evans/create-pull-request@v5.0.2
    
      - run: |
          git status

      - if: inputs.native
        run: |
          nohup java -agentlib:native-image-agent=config-merge-dir=${{ env.path }}/${{ env.modulePath }}/src/main/resources/META-INF/native-image/ -jar ${{ env.modulePath }}/target/${{ inputs.module }}-${{ inputs.version }}.jar > /dev/null 2>&1  & echo "pid=$!" >> $GITHUB_ENV  
          #echo "stopMarker=$(uuidgen)" >> $GITHUB_ENV
        #continue-on-error: true 
  
      - run: |
          git status
          
      - uses: actions/upload-artifact@v3.1.1
        with:
          name: test
          path: '**/target/surefire-reports/TEST-*.xml'
  
      - run: | 
         ps -ef |grep ${{ env.pid }}
        continue-on-error: true 
 
      - run: |
          #echo "::stop-commands::${{ env.stopMarker }}"
          sleep 15
          kill -s 15 ${{ env.pid }}
          sleep 15
          #curl -X POST http://localhost:8080/actuator/shutdown
        continue-on-error: true 
        
      - run: |
          git status
    
      - run: | 
         ps -ef |grep ${{ env.pid }}
        continue-on-error: true  
       
      - if: inputs.native
        run: |
          mvn -P native spring-boot:build-image  -DskipTests -f  ${{ env.path }}/${{ env.modulePath}}/pom.xml
          
      - if: inputs.native
        run: |
          docker tag ${{inputs.module}}:native ${{inputs.module}}:${{ github.event.inputs.ref || github.head_ref || github.ref_name }}-native
        continue-on-error: true 

      - if: inputs.native
        run: |
          docker tag ${{inputs.module}}:native ${{inputs.module}}:${{ github.sha }}-native
        continue-on-error: true 
        
      - if: inputs.native
        name: Push To quay
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{github.ref_name }}-native
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }}     
          
      - if: inputs.native
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{ github.sha }}-native
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }}     

      - if: ${{inputs.native  && github.ref_name == 'main' }}
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ inputs.module }}
          registry: quay.io/elpsykongroo
          tags: ${{ inputs.version }}-native
          username:  ${{ secrets.QUAY_REGISTRY_NAME }}
          password:  ${{ secrets.QUAY_REGISTRY_PASS }} 
          
#       - name: Push To harbor
#         uses: redhat-actions/push-to-registry@v2.7
#         continue-on-error: true 
#         with:
#           image: ${{ inputs.module }}
#           registry: registry.elpsykongroo.com/library
#           tags: native
#           username:  ${{ secrets.REGISTRY_PRIVATE_NAME }}
#           password:  ${{ secrets.REGISTRY_PRIVATE_PASS }}

      - id: cpr
        uses: peter-evans/create-pull-request@v5.0.2
        continue-on-error: true 
        
      - run: |
          git status
          
#       - uses: actions/upload-artifact@v3.1.1
#         with:
#           name: package
#           path: |
#             ${{ env.path }}/
#             !${{ env.path }}/**/*.jar
#           retention-days: 3  
   
      - run: | 
         ps -ef |grep ${{ env.pid }}
         #cat ${{ env.path }}//${{ env.modulePath}}/src/main/resources/META-INF/native-image/.lock
        continue-on-error: true 
     
#       - run: |
#           echo ${{ github.context.payload.pull_request }}
#           echo ${{ steps.cpr.outputs.pull-request-number }}
          
#   pr_number:
#     needs: test
#     environment: ${{ github.event.inputs.environment || 'native-image' }}
#     runs-on: ubuntu-latest
#     if: ${{ github.event_name == 'push' }}
#     steps:
#       - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
#         with:
#           fetch-depth: 0
#       - name: Get Pull Request Number
#         id: pr
#         run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - run: echo ${{ steps.pr.outputs.pull_request_number }}

#   labeler:
#     needs: test
#     uses: Labman4/workflow/.github/workflows/labeler.yml@labeler
#     with: 
#       configuration-path: .github/labeler.yml@labeler
#     secrets: inherit

      
  coverage:  
    needs: test
    uses: Labman4/workflow/.github/workflows/coverage-reporter.yml@coverage
    
  
