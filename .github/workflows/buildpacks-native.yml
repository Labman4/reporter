on: 
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      moduleName:
        required: false
        type: string
      mode:
        required: false
        type: string
      version:
        required: false
        type: string
jobs:    
  buildpacks:
    environment: native-image
    runs-on: ubuntu-latest
#     timeout-minutes: 5
    strategy:
      fail-fast: true
    steps: 
    - if: inputs.moduleName == 0
      run: echo "modulePath=${{ inputs.module }}" >> $GITHUB_ENV
      
    - if: inputs.moduleName != 0
      run: echo "modulePath=${{ inputs.module }}/${{ inputs.moduleName }}"  >> $GITHUB_ENV   
         
    - if: inputs.mode == 'pre'
      uses: actions/checkout@v3.5.3
        
    - if: inputs.mode == 'pre'
      run: |
        echo "tag=pre" >> $GITHUB_ENV
        
    - if: inputs.mode != 'pre'
      run: |
        echo "tag=native" >> $GITHUB_ENV
  
    - if: inputs.mode != 'pre'
      uses: actions/download-artifact@v3.0.1
      with:
        name:  package
        
    - if: inputs.mode == 'pre'
      name: Import Secrets
      id: import-secrets
      uses: hashicorp/vault-action@v2.7.3
      with:
        url: https://vault.elpsykongroo.com:443
        method: github
        githubToken: ${{ secrets.VAULT_GITHUB_TOKEN }}
        secrets: |
          kv/data/app/test/vault VAULT_TOKEN | VAULT_TOKEN;
          kv/data/app/test/vault VAULT_URI | VAULT_URI;            
          kv/data/app/test/vault SECRETS_APP_AUTH_PATH | SECRETS_APP_AUTH_PATH;
          kv/data/app/test/vault SECRETS_APP_GATEWAY_PATH | SECRETS_APP_GATEWAY_PATH;
          kv/data/app/test/vault SECRETS_APP_ES_PATH | SECRETS_APP_ES_PATH;
          kv/data/app/test/vault SECRETS_APP_REDIS_PATH | SECRETS_APP_REDIS_PATH;
          kv/data/app/test/vault SECRETS_APP_STORAGE_PATH | SECRETS_APP_STORAGE_PATH;
          kv/data/app/test/vault SECRETS_DATA_ES_PATH | SECRETS_DATA_ES_PATH;
          kv/data/app/test/vault SECRETS_DATA_REDIS_PATH | SECRETS_DATA_REDIS_PATH
          
    - uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '17'
        set-java-home: 'true'
        cache: maven
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - run: |
        echo "path=$(pwd)" >> $GITHUB_ENV
        echo "home=$HOME" >> $GITHUB_ENV
        ls -la
        
    - if: inputs.mode == 'pre'  
      run: |
        mvn -P native package -DskipTests -f  ${{ env.path }}/${{ env.modulePath }}/pom.xml 
        
    - uses: labman4/buildpacks-action@master
      with:
        image:  ${{ inputs.module }}
        tag: ${{ env.tag }}
        path: '${{ env.path }}/${{ env.modulePath }}'
        builder: 'paketobuildpacks/builder:tiny'
        env: 'BP_JVM_VERSION=17 BP_NATIVE_IMAGE=true JAVA_TOOL_OPTIONS=-agentlib:native-image-agent=config-merge-dir=src/main/resources/META-INF/native-image/ '
#         map_env: 'BP_MAVEN_BUILD_ARGUMENTS="-Dmaven.test.skip=true --no-transfer-progress package "'
        map_env: 'BP_NATIVE_IMAGE_BUILD_ARGUMENTS="--initialize-at-build-time=org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository"'

#         map_env: 'BP_NATIVE_IMAGE_BUILD_ARGUMENTS="--initialize-at-build-time=org.slf4j.LoggerFactory,io.netty.util.internal.logging.LocationAwareSlf4JLogger,io.netty.util.internal.PlatformDependent,io.netty.util.internal.PlatformDependent0,io.netty.util.CharsetUtil,io.netty.util.internal.SystemPropertyUtil,io.netty.util.internal.CleanerJava9,ch.qos.logback.core.util.Loader,ch.qos.logback.core.status.StatusBase,ch.qos.logback.classic.Logger,ch.qos.logback.core.CoreConstants,org.slf4j.MDC,ch.qos.logback.classic.Level,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.core.util.StatusPrinter,org.springframework.data.domain.Page,org.springframework.data.domain.Pageable"'
        volume: ${{ env.home }}
              
    - name: Push To hub
      uses: redhat-actions/push-to-registry@v2.7
      with:
        image: ${{ inputs.module }}
        registry: docker.io/labman4
        tags: ${{ env.tag }}
        username:  ${{ secrets.REGISTRY_NAME }}
        password:  ${{ secrets.REGISTRY_PASS }}  
      
    - name: Push To quay
      uses: redhat-actions/push-to-registry@v2.7
      with:
        image: ${{ inputs.module }}
        registry: quay.io/elpsykongroo
        tags: ${{ env.tag }}
        username:  ${{ secrets.QUAY_REGISTRY_NAME }}
        password:  ${{ secrets.QUAY_REGISTRY_PASS }}
        
    - name: Push To harbor
      uses: redhat-actions/push-to-registry@v2.7
      continue-on-error: true 
      with:
        image: ${{ inputs.module }}
        registry: registry.elpsykongroo.com/library
        tags: ${{ env.tag }}
        username:  ${{ secrets.REGISTRY_PRIVATE_NAME }}
        password:  ${{ secrets.REGISTRY_PRIVATE_PASS }}

