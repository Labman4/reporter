on: 
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      moduleName:
        required: false
        type: string
      mode:
        required: false
        type: string
      version:
        required: false
        type: string
jobs:
  buildpacks:
    environment: native-image
    runs-on: ubuntu-latest
#     timeout-minutes: 5
    strategy:
      fail-fast: true
    steps: 
    - if: inputs.moduleName == 0
      run: echo "modulePath=${{ inputs.module }}" >> $GITHUB_ENV
      
    - if: inputs.moduleName != 0
      run: echo "modulePath=${{ inputs.module }}/${{ inputs.moduleName }}"  >> $GITHUB_ENV   
         
    - if: inputs.mode == 'pre'
      uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      
    - if: inputs.mode == 'pre'
      run: |
        echo "tag=pre" >> $GITHUB_ENV
        
    - if: inputs.mode != 'pre'
      run: |
        echo "tag=native" >> $GITHUB_ENV
  
    - if: inputs.mode != 'pre'
      uses: actions/download-artifact@v3.0.1
      with:
        name:  package
    
    - run: |
        echo "path=$(pwd)" >> $GITHUB_ENV
        echo "home=$HOME" >> $GITHUB_ENV
        ls -la
     
    - uses: graalvm/setup-graalvm@d01f5f519f35cf82b318133761fd8b674632a8fe
      with:
        version: 'latest'
        java-version: '17'
        set-java-home: 'true'
        cache: maven
        components: 'native-image'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
        native-image-pr-reports: 'true'
            
    - uses: ScribeMD/docker-cache@0.2.7
      with:
        key: docker-${{ runner.os }}-${{ github.workflow_ref }}
     
    - run: | 
        mvn package install -DskipTests
        
    - run: |
        mvn -P native package -DskipTests -f  ${{ env.path }}/${{ env.modulePath }}/pom.xml 
        
    - uses: labman4/buildpacks-action@master
      with:
        image:  ${{ inputs.module }}
        tag: native
        path: '${{ env.path }}/${{ env.modulePath }}'
        builder: 'paketobuildpacks/builder:0.1.303-tiny'
        env: 'BP_JVM_VERSION=17.0.5 JAVA_TOOL_OPTIONS=-agentlib:native-image-agent=config-merge-dir=src/main/resources/META-INF/native-image/ BP_NATIVE_IMAGE=true '
        map_env: 'BP_MAVEN_BUILD_ARGUMENTS="-Dmaven.test.skip=true --no-transfer-progress package "'
#         map_env: 'BP_NATIVE_IMAGE_BUILD_ARGUMENTS="--initialize-at-build-time=org.slf4j.LoggerFactory,io.netty.util.internal.logging.LocationAwareSlf4JLogger,io.netty.util.internal.PlatformDependent,io.netty.util.internal.PlatformDependent0,io.netty.util.CharsetUtil,io.netty.util.internal.SystemPropertyUtil,io.netty.util.internal.CleanerJava9,ch.qos.logback.core.util.Loader,ch.qos.logback.core.status.StatusBase,ch.qos.logback.classic.Logger,ch.qos.logback.core.CoreConstants,org.slf4j.MDC,ch.qos.logback.classic.Level,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.core.util.StatusPrinter --trace-class-initialization=io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder"'
        volume: ${{ env.home }}
              
    - name: Push To hub
      uses: redhat-actions/push-to-registry@v2.7
      with:
        image: ${{ inputs.module }}
        registry: docker.io/labman4
        tags: ${{ env.tag }}
        username:  ${{ secrets.REGISTRY_NAME }}
        password:  ${{ secrets.REGISTRY_PASS }}  
      
    - name: Push To quay
      uses: redhat-actions/push-to-registry@v2.7
      with:
        image: ${{ inputs.module }}
        registry: quay.io/elpsykongroo
        tags: ${{ env.tag }}
        username:  ${{ secrets.QUAY_REGISTRY_NAME }}
        password:  ${{ secrets.QUAY_REGISTRY_PASS }}
        
    - name: Push To harbor
      uses: redhat-actions/push-to-registry@v2.7
      continue-on-error: true 
      with:
        image: ${{ inputs.module }}
        registry: registry.elpsykongroo.com/library
        tags: ${{ env.tag }}
        username:  ${{ secrets.REGISTRY_PRIVATE_NAME }}
        password:  ${{ secrets.REGISTRY_PRIVATE_PASS }}

