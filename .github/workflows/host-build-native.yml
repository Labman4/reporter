name: deployment prod
on: 
  workflow_call:
    inputs:
      deploy_secret:
        type: string
        required: false
jobs:
  host_build:
    environment: native-image
    runs-on: [self-hosted]
    outputs:
      result: ${{ steps.build.outputs.build }}
      deploy: ${{ steps.deploy_enable.outputs.deploy }}
    steps:      
      - uses: actions/checkout@v3.3.0   
     
      - run: |
          echo "path=$(pwd)" >> $GITHUB_ENV
          echo "home=$HOME" >> $GITHUB_ENV
          echo "deploy=${{ secrets.DEPLOY_SECRET }}" >>  $GITHUB_ENV
        
#       - id: deploy_enable
#         run: |
          
#           if [[ ${{ inputs.deploy_secret }} == ${{ secrets.DEPLOY_SECRET }} ]];
#           then         
#             echo "deploy=enable" >> $GITHUB_OUTPUT
#           fi
#           echo ${{ env.deploy }}
#           echo ${{ inputs.deploy_secret }}
    
      - run: | 
          mvn package install -DskipTests
         
#       - name: agent trace   
#         run: |
#           nohup java -agentlib:native-image-agent=config-merge-dir=${{ env.path }}/gateway/src/main/resources/META-INF/native-image/ -DENV=pre -jar  ${{ env.path }}/gateway/target/gateway-0.0.2.jar > /dev/null 2>&1  & echo "pid=$!" >> $GITHUB_ENV   
#           #java -agentlib:native-image-agent=config-merge-dir=${{ env.path }}/gateway/src/main/resources/META-INF/native-image/ -DENV=pre -jar  gateway/target/gateway-0.0.2.jar 
#           #echo "stopMarker=$(uuidgen)" >> $GITHUB_ENV
# #         continue-on-error: true 

#       - run: |
#           git status
          
#       - run: |
#           #echo "::stop-commands::${{ env.stopMarker}}"
#           kill -s 15 ${{ env.pid }}
#           sleep 10
#         continue-on-error: true 
        
#       - run: | 
#          ps -ef |grep ${{ env.pid }}
#         continue-on-error: true 
        
#       - id: cpr
#         uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
#         with:
#           base: native-image
          
      - id: build 
        run: |
          mvn -DvaultToken=${{secrets.VAULT_TOKEN}} -DvaultPath=${{secrets.VAULT_PATH}} -DvaultUri=${{secrets.VAULT_URI}}  -DSECRETS_PATH=${{secrets.SECRETS_PATH}} -P native,nativeTest package -DskipTests -f ${{ env.path }}/gateway/pom.xml
          podman tag registry.elpsykongroo.com/library/gateway:native gateway:native
          
      - name: Push To Registry
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: gateway
          registry: registry.elpsykongroo.com/library
          tags: "native"
          username:  ${{ secrets.REGISTRY_PRIVATE_NAME }}
          password:  ${{ secrets.REGISTRY_PRIVATE_PASS }}
    
#   verify:
#     environment: ${{ github.event.inputs.environment || 'native-image' }}
#     runs-on: ubuntu-latest
#     needs: host_build
#     steps:
#       - run: echo ${{needs.host_build.outputs.deploy}} 
  deploy:
    environment: prod
    needs: host_build
#    if: needs.host_build.outputs.deploy == enable not work
    runs-on: [self-hosted]
    steps:
      - name: depoly with helm
        env:
          deploy: ${{ secrets.DEPLOY_SECRET }}
        if: ${{ env.deploy == inputs.deploy_secret }}
        run: |
          helm upgrade -n demo gateway ~/code/helm/charts/gateway

#   label:
#     needs: host_build
#     if: needs.host-build.outputs.result == 'success'
#     environment: ${{ github.event.inputs.environment || 'native-image' }}
#     uses: Labman4/workflow/.github/workflows/labeler.yml@labeler
    


